const dir = require('node-dir');
const fs = require('fs');

/* you can make changes here */
const outfile = 'mainHTML.st';
const infolder = 'build';
const excludeRegex = /(\.(?:ico|png)$|^\.)/;

/* don't change anything below this line! */
const methodStart = `html
mainHTML
  "This is a autogenerated method. Do not change!"
  ^ {`;
const methodEnd = `} asDictionary.`;
const smalltalkSeperator = `->`;
const smalltalkDelimiter = `.`;
const smalltalkString = methodName => `'${methodName}'`;
const smalltalkStringSafe = str => str.replace(/'/gm, "''");

new Promise((resolved, failed) => {
  const files = {};
  dir.readFiles(
    infolder,
    {
      match: /.$/,
      exclude: excludeRegex
    },
    (err, content, filename, next) => {
      if (err) {
        failed();
        throw err;
      }
      // eslint-disable-next-line no-console
      console.log('Included:', filename);
      files[filename.replace(`${infolder}/`, '')] = content;
      next();
    },
    () => {
      resolved(files);
    }
  );
}).then(files => {
  let str = methodStart;
  // eslint-disable-next-line no-restricted-syntax
  for (const [name, content] of Object.entries(files)) {
    str += smalltalkString(name);
    str += smalltalkSeperator;
    str += smalltalkString(smalltalkStringSafe(content));
    str += smalltalkDelimiter;
  }
  str += methodEnd;
  fs.writeFileSync(outfile, str);
  // eslint-disable-next-line no-console
  console.log(`--> exported to ${outfile}`);
});
